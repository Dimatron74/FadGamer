# Generated by Django 5.2.1 on 2025-05-28 10:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('support', '0003_ticket_last_message_time'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BonusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_amount', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Тип бонуса',
                'verbose_name_plural': 'Типы бонусов',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Промокод')),
                ('status', models.CharField(choices=[('active', 'Активный'), ('inactive', 'Неактивный'), ('used', 'Использованный'), ('expired', 'Истекший')], default='active', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата истечения')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_promocodes', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocodes', to='support.service', verbose_name='Сервис/игра')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='PromoCodeBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество')),
                ('bonus_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.bonustype', verbose_name='Тип бонуса')),
                ('promocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonuses', to='admin_panel.promocode', verbose_name='Промокод')),
            ],
            options={
                'verbose_name': 'Бонус промокода',
                'verbose_name_plural': 'Бонусы промокодов',
            },
        ),
        migrations.CreateModel(
            name='UserPromoCodeActivation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата активации')),
                ('is_applied', models.BooleanField(default=False, verbose_name='Начислено')),
                ('promocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activations', to='admin_panel.promocode', verbose_name='Промокод')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activated_promocodes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Активация промокода',
                'verbose_name_plural': 'Активации промокодов',
                'unique_together': {('user', 'promocode')},
            },
        ),
    ]
